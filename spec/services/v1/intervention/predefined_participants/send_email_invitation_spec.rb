# frozen_string_literal: true

RSpec.describe V1::Intervention::PredefinedParticipants::SendEmailInvitation do
  subject { described_class.call(user) }

  let(:intervention) { create(:intervention, :with_predefined_participants) }
  let!(:user) { intervention.predefined_users.first }

  it 'when user has autogenerated email' do
    subject
    expect(InterventionMailer).not_to receive(:inform_to_an_email)
  end

  context 'when user has email provided by a researcher' do
    before do
      user.update(email_autogenerated: false)
    end

    it 'user should get an email' do
      expect { described_class.call(user) }.to change {
        user.predefined_user_parameter.email_invitation_sent_at
      }.from(nil)
    end
  end

  context 'when the user is deactivated' do
    before do
      user.update!(active: false)
    end

    it 'raise an exception' do
      expect { subject }.to raise_error(ActiveRecord::ActiveRecordError)
    end
  end
end
